{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "lib/Meta.js",
    "lib/MetaDirective.js",
    "lib/MetaService.js",
    "lib/index.js"
  ],
  "names": [],
  "mappings": "AAAA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzhGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.Meta = Meta;\n\nvar _fdAngularCore = require('fd-angular-core');\n\nfunction Meta(object, name, desc) {\n  var func = desc.value;\n\n  function pushMeta(Meta) {\n    var args = Array.prototype.slice.call(arguments, 1);\n    Meta.push(func.apply(this, args));\n  }\n  pushMeta.$inject = ['Meta'].concat(func && func.$inject || []);\n  _fdAngularCore.State.onAttach(object, 'pushMeta', { value: pushMeta });\n\n  function popMeta(Meta) {\n    Meta.pop();\n  }\n  popMeta.$inject = ['Meta'];\n  _fdAngularCore.State.onAttach(object, 'popMeta', { value: popMeta });\n}\n//# sourceMappingURL=Meta.js.map",
    "'use strict';\n\nvar _fdAngularCore = require('fd-angular-core');\n\n_fdAngularCore.app.directive('fdMeta', function () {\n  return {\n    restrict: 'M',\n    template: TMPL\n  };\n});\n\nvar TMPL = '\\n<title ng-bind-template=\"{{ meta.title }}\"></title>\\n<meta name=\"description\" content=\"{{ meta.description }}\" />\\n\\n<meta name=\"prerender-status-code\" content=\"{{ meta.status }}\">\\n<link rel=\"canonical\" ng-href=\"{{ meta.url }}\" />\\n\\n<meta property=\"og:site_name\" content=\"{{ meta.siteName }}\" />\\n<meta property=\"og:url\" content=\"{{ meta.url }}\" />\\n<meta property=\"og:title\" content=\"{{ meta.title }}\" />\\n<meta property=\"og:type\" content=\"{{ meta.type }}\" />\\n<meta property=\"og:description\" content=\"{{ meta.description }}\" />\\n<meta property=\"og:image\" content=\"{{ meta.image }}\" />\\n\\n<meta name=\"twitter:card\" content=\"summary_large_image\">\\n<meta name=\"twitter:site\" content=\"{{ meta.twitterHandle }}\">\\n<meta name=\"twitter:title\" content=\"{{ meta.title }}\">\\n<meta name=\"twitter:description\" content=\"{{ meta.description }}\">\\n<meta name=\"twitter:image\" content=\"{{ meta.image }}\">\\n';\n//# sourceMappingURL=MetaDirective.js.map",
    "'use strict';\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _fdAngularCore = require('fd-angular-core');\n\nvar MetaService = (function () {\n  function MetaService($rootScope, $location) {\n    _classCallCheck(this, _MetaService);\n\n    this.$rootScope = $rootScope;\n    this.$location = $location;\n\n    this.stack = [];\n    this.top = null;\n\n    this.push({});\n  }\n\n  var _MetaService = MetaService;\n\n  _createClass(_MetaService, [{\n    key: 'push',\n    value: function push(data) {\n      var top = this.top;\n      var loc = this.$location;\n\n      if (!data.url) {\n        data.url = loc.absUrl();\n      }\n\n      if (top) {\n        if (!data.siteName) {\n          data.siteName = top.siteName;\n        }\n\n        if (!data.title) {\n          data.title = top.title;\n        }\n\n        if (!data.image) {\n          data.image = top.image;\n        }\n\n        if (!data.description) {\n          data.description = top.description;\n        }\n\n        if (!data.type) {\n          data.type = top.type;\n        }\n\n        if (!data.twitterHandle) {\n          data.twitterHandle = top.twitterHandle;\n        }\n\n        if (!data.status) {\n          data.status = top.status;\n        }\n      }\n\n      if (!data.type) {\n        data.type = 'website';\n      }\n\n      if (!data.status) {\n        data.status = 200;\n      }\n\n      if (data.image && data.image.indexOf('http') !== 0) {\n        data.image = loc.protocol() + '://' + loc.host() + data.image;\n      }\n\n      if (data.url && data.url.indexOf('http') !== 0) {\n        data.url = loc.protocol() + '://' + loc.host() + data.url;\n      }\n\n      this.stack.push(data);\n      this.top = data;\n      this.$rootScope.meta = this.top;\n    }\n  }, {\n    key: 'pop',\n    value: function pop(data) {\n      this.stack.pop();\n      this.top = this.stack[this.stack.length - 1];\n      this.$rootScope.meta = this.top;\n    }\n  }]);\n\n  MetaService = (0, _fdAngularCore.Inject)('$rootScope', '$location')(MetaService) || MetaService;\n  MetaService = (0, _fdAngularCore.Service)('Meta')(MetaService) || MetaService;\n  return MetaService;\n})();\n//# sourceMappingURL=MetaService.js.map",
    "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nrequire('./MetaService');\n\nrequire('./MetaDirective');\n\nvar _Meta = require('./Meta');\n\nObject.defineProperty(exports, 'Meta', {\n  enumerable: true,\n  get: function get() {\n    return _Meta.Meta;\n  }\n});\n//# sourceMappingURL=index.js.map"
  ]
}