{"version":3,"sources":["../src/MetaService.js"],"names":[],"mappings":"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","file":"MetaService.js","sourcesContent":["import {Service, Inject} from 'fd-angular-core';\n\nlet defaults = {\n\ttype:         'website',\n\tstatus:       200,\n\tdistribution: 'global',\n\trevisitAfter: 7,\n}\n\n@Service('Meta')\n@Inject('$rootScope', '$location')\nclass MetaService {\n\n\tconstructor($rootScope, $location) {\n\t\tthis.$rootScope = $rootScope;\n\t\tthis.$location  = $location;\n\n\t\tthis.stack = [];\n\t\tthis.top = null;\n\n\t\tthis.push({});\n\t}\n\n\tpush(data) {\n\t\tlet top = this.top;\n\t\tlet loc = this.$location;\n\t\tlet entry = {};\n\n\t\t// normalize\n\t\tif (!data.url) { data.url = loc.absUrl(); }\n\t\tif (data.image) { data.image = toAbsUrl(data.image); }\n\t\tif (data.url) { data.url = toAbsUrl(data.url); }\n\n\t\tdata.author = (data.author || data.copyright || data.publisher);\n\t\tdata.copyright = (data.copyright || data.author || data.publisher);\n\t\tdata.publisher = (data.publisher || data.author || data.copyright);\n\n\t\t// inherit from top\n\t\tif (top) {\n\t\t\tObject.assign(entry, top);\n\t\t}\n\n\t\t// assign data\n\t\tfor (let key of Object.keys(data)) {\n\t\t\tif (data[key] !== undefined) {\n\t\t\t\tentry[key] = data[key];\n\t\t\t}\n\t\t}\n\n\t\t// apply defaults\n\t\tfor (let key of Object.keys(defaults)) {\n\t\t\tif (entry[key] === undefined) {\n\t\t\t\tentry[key] = defaults[key];\n\t\t\t}\n\t\t}\n\n\t\tthis.stack.push(entry);\n\t\tthis.top = entry;\n\t\tthis.$rootScope.meta = this.top;\n\t}\n\n\tpop(data) {\n\t\tthis.stack.pop();\n\t\tthis.top = this.stack[this.stack.length-1];\n\t\tthis.$rootScope.meta = this.top;\n\t}\n\n}\n\nfunction toAbsUrl(url) {\n\tif (!url) {\n\t\treturn null;\n\t}\n\n\tif (url.indexOf('http') === 0) {\n\t\treturn url;\n\t}\n\n\tif (url.indexOf('//') === 0) {\n\t\treturn `${window.location.protocol}${url}`;\n\t}\n\n\tif (url.indexOf('/') === 0) {\n\t\treturn `${window.location.protocol}//${window.location.host}${url}`;\n\t}\n\n\treturn `${window.location.protocol}//${window.location.host}/${url}`;\n}\n"]}